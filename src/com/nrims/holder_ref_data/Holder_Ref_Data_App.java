/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nrims.holder_ref_data;

import com.nrims.holder_data_mgmt.DataIO;
import com.nrims.holder_data_mgmt.DataPointFileProcessor;
import java.awt.event.ActionEvent;
import javax.swing.JDialog;
import javax.swing.JFileChooser;

/**
 *
 * @author fkashem
 */
public class Holder_Ref_Data_App extends javax.swing.JFrame {

    /**
     * Creates new form Holder_Ref_Data_App
     */
    public Holder_Ref_Data_App() {
        initComponents();
        initInternalData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generateButton = new javax.swing.JButton();
        testRun = new javax.swing.JButton();
        srcLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        destReviewTable = new javax.swing.JTable();
        destLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        srcReviewTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveREFMenuItem = new javax.swing.JMenuItem();
        savePRSMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        setupMenu = new javax.swing.JMenu();
        loadCoeff = new javax.swing.JMenuItem();
        loadCoords = new javax.swing.JMenuItem();
        openREF = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        testRun.setText("Testing");
        testRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testRunActionPerformed(evt);
            }
        });

        srcLabel.setText("Source Points");

        destReviewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(destReviewTable);

        destLabel.setText("Destination Points");

        srcReviewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(srcReviewTable);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        saveREFMenuItem.setMnemonic('s');
        saveREFMenuItem.setText("Save .ref File");
        saveREFMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveREFMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveREFMenuItem);

        savePRSMenuItem.setMnemonic('a');
        savePRSMenuItem.setText("Save .prs FIle");
        savePRSMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePRSMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(savePRSMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setupMenu.setText("Setup");

        loadCoeff.setText("Load Coefficient File");
        loadCoeff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadCoeffActionPerformed(evt);
            }
        });
        setupMenu.add(loadCoeff);

        loadCoords.setText("Load Point Coords File");
        loadCoords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadCoordsActionPerformed(evt);
            }
        });
        setupMenu.add(loadCoords);

        openREF.setText("Open .ref File");
        setupMenu.add(openREF);

        menuBar.add(setupMenu);

        helpMenu.setText("Help");

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(testRun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generateButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(srcLabel)
                                .addGap(211, 211, 211)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(destLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testRun)
                    .addComponent(generateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srcLabel)
                    .addComponent(destLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    /*
     * Save .ref file menu item action.
     */
    private void saveREFMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveREFMenuItemActionPerformed
        int returnVal = fc.showSaveDialog( this );
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            DataIO.saveREF(fc.getSelectedFile().getPath(), dpfp);
        }
    }//GEN-LAST:event_saveREFMenuItemActionPerformed

    private void savePRSMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePRSMenuItemActionPerformed
        int saveApprove = fc.showSaveDialog( this );
        if (saveApprove == JFileChooser.APPROVE_OPTION) {
            DataIO.savePRS(fc.getSelectedFile().getAbsolutePath(), dpfp);
        }
    }//GEN-LAST:event_savePRSMenuItemActionPerformed

    private void loadCoeffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadCoeffActionPerformed
        int returnVal = fc.showOpenDialog( this );
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            coeffFilePath = fc.getSelectedFile().getPath();
            dpfp.setCoeffFilePath(coeffFilePath);
        }
    }//GEN-LAST:event_loadCoeffActionPerformed

    private void loadCoordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadCoordsActionPerformed
        int returnVal = fc.showOpenDialog( this );
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            coordFilePath = fc.getSelectedFile().getPath();
            dpfp.setSrcFilePath(coordFilePath);
        }
    }//GEN-LAST:event_loadCoordsActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        dpfp.processTransform();
        
        /* This is to generate with the new comment rather than the default. 
         * Deal with this later
        for (int i=0; i<rpl.getNumRefPoints(); i++)
            rpl.getRefPoint(i).setComment(getCommentFor(i));
            * 
            */
        
        destTableRefresh();
    }//GEN-LAST:event_generateButtonActionPerformed

    private void testRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testRunActionPerformed
        coeffFilePath = "/nrims/home3/fkashem/NetBeansProjects/nikon2mims/trunk/holder_ref_data/test/gwen-exp9/coeff-gwen-exp9.txt";
        coordFilePath = "/nrims/home3/fkashem/NetBeansProjects/nikon2mims/trunk/holder_ref_data/test/gwen-exp9/xy.points";
        generateButtonActionPerformed(new ActionEvent(new Object(), ActionEvent.ACTION_PERFORMED, ""));
    }//GEN-LAST:event_testRunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Holder_Ref_Data_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Holder_Ref_Data_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Holder_Ref_Data_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Holder_Ref_Data_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Holder_Ref_Data_App().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JLabel destLabel;
    private javax.swing.JTable destReviewTable;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton generateButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem loadCoeff;
    private javax.swing.JMenuItem loadCoords;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openREF;
    private javax.swing.JMenuItem savePRSMenuItem;
    private javax.swing.JMenuItem saveREFMenuItem;
    private javax.swing.JMenu setupMenu;
    private javax.swing.JLabel srcLabel;
    private javax.swing.JTable srcReviewTable;
    private javax.swing.JButton testRun;
    // End of variables declaration//GEN-END:variables

    /* custom private variables */
    private DataPointFileProcessor dpfp;
    private RDRTableModel destTableModel;
    private RDRTableModel srcTableModel;
    private JDialog aboutBox;
    private JFileChooser fc = new JFileChooser();
    private String coeffFilePath;
    private String coordFilePath;
    private String refFilePath;
    
    private void initInternalData()
    {
        dpfp = new DataPointFileProcessor();
       // data_point_comment_text.setText(
        //        dpfp.getRefPointList().getDefaultRefPointComment()
         //       );
    }
    
    /*
     * Refreshes destReviewTable with data from dataPointFileProcessor
     */
    private void destTableRefresh() {
        destTableModel = new RDRTableModel(destReviewTable.getModel(), dpfp);
        destReviewTable.setModel(destTableModel);
    }
}
